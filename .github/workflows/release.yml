name: Publish Docker

on:
  push:
    tags:
      - v1*
env:
  # TODO: Change variable to your image's name.
  IMAGE_NAME: flask-uploadfile

jobs:
  ghr_push:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v2

      - name: Build container image
        run: docker build --tag $IMAGE_NAME .

      - name: Log into GitHub Container Registry
      # TODO: Create a PAT with `read:packages` and `write:packages` scopes and save it as an Actions secret `CR_PAT`
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login https://ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Push poi image to GitHub Container Registry
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository }}/$IMAGE_NAME

          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]]

          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION

          echo "tag $VERSION"
          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          echo "tag latest"
          docker tag $IMAGE_NAME $IMAGE_ID:latest

          docker push $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:latest
  #ecr_public:
   # name: ECR Public
   # runs-on: ubuntu-latest
   # steps:
   #   - name: Get repo name
   #     id: repoName
   #     run: echo "::set-output name=reponame::$(echo ${{github.repository}} | cut -d '/' -f 2)"
   #   - name: Get short SHA
   #     id: sha
   #     run: echo "::set-output name=sha8::$(echo ${GITHUB_SHA} | cut -c1-8)"
   #   - name: Checkout
   #     uses: actions/checkout@v2
   #   - name: Configure AWS credentials
   #     uses: aws-actions/configure-aws-credentials@v1
   #     with:
   #       aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
   #       aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
   #       aws-region: us-east-1
   #   - name: Build and Push to ECR public
   #     id: build-and-push
   #     uses: pahud/ecr-public-action@8cd826db40befb59b0cd0b60b22a7ba72d06a7f7
   #     with:
   #       dockerfile: ./Dockerfile-alpine
   #       tags: |
   #         public.ecr.aws/w4j7f3u2/${{ steps.repoName.outputs.reponame }}:latest
   #         public.ecr.aws/w4j7f3u2/${{ steps.repoName.outputs.reponame }}:${{ steps.sha.outputs.sha8 }}
